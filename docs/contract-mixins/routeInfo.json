{"template":"/Users/spencercorwin/neo-one/packages/neo-one-website/src/pages/docs","sharedHashesByProp":{},"data":{"current":"/docs/contract-mixins","title":"Contract Mixins","content":{"type":"markdown","value":"\nNEOâ€¢ONE provides mixins for common smart contract patterns.\n\nThis guide will walk you through how to use a mixin.\n\n---\n\n[[toc]]\n\n---\n\n## Requirements\n\nInstall the following packages if you have not done so:\n\n```bash\nyarn add @neo-one/client @neo-one/cli @neo-one/smart-contract @neo-one/smart-contract-test @neo-one/smart-contract-lib @neo-one/smart-contract-typescript-plugin\n```\n\n```bash\nnpm install @neo-one/client @neo-one/cli @neo-one/smart-contract @neo-one/smart-contract-test @neo-one/smart-contract-lib @neo-one/smart-contract-typescript-plugin\n```\n\n::: warning\n\nImportant\n\nThe package `@neo-one/smart-contract-lib` contains the mixins and is important to this guide.\n\n:::\n\n---\n\n## What Is A Mixin?\n\nA mixin is a class (abstract or non-abstract) in which some or all of its methods and/or properties are unimplemented.\n\nWe use mixin as a way to insert common properties and methods (sometimes required such as in the case of meeting a token standard) into your contract.\n\n::: warning\n\nTip\n\nYou can think of our mixins as a template or a base where you can build your contracts on.\n\n:::\n\n---\n\n## Usage\n\n```typescript\nimport { SmartContract } from '@neo-one/smart-contract';\n// import template of your choice from @neo-one/smart-contract-lib\nimport { NEP5Token } from '@neo-one/smart-contract-lib';\n// Mixins\nexport class YourContract extends NEP5Token(SmartContract) {\n  // 'SmartContract' here can be any other contract (abstract & non-abstract class) that extends SmartContract class\n  // 'YourContract' inherits the methods and properties defined in NEP5TokenClass returned by NEP5Token\n  // ... your smart contract code.\n}\n```\n\nIf you find the syntax `NEP5Token(SmartContract)` strange, checkout this page on [Mixins](https://www.typescriptlang.org/docs/handbook/mixins.html) from the TypeScript Handbook for more details.\n\n::: warning\n\nTip\n\nWe encourage you to look at the NEP5Token mixin to understand how we are implementing a NEP5 token. Go [here](https://github.com/neo-one-suite/neo-one/blob/master-2.x/packages/neo-one-smart-contract-lib/src/NEP5Token.ts) to see the source code for the NEP5Token mixin\n\n:::\n\n---\n\n## Example\n\nThe following example set uses a mixin to design a new token that follows the NEP5 token standard.\n\n::: warning\n\nNote\n\nA token standard simply defines a set of methods and properties that must exist in the token.\n\n:::\n\n`SimpleToken.ts`\n\nSimpleToken is injected with `NEP5Token`'s methods and properties.\n\n```typescript\nimport { Address, Fixed, SmartContract } from '@neo-one/smart-contract';\nimport { NEP5Token } from '@neo-one/smart-contract-lib';\nexport abstract class SimpleToken extends NEP5Token(SmartContract) {\n  public readonly owner: Address;\n  public readonly decimals: 8 = 8;\n  public constructor(owner: Address, amount: Fixed<8>) {\n    super();\n    if (!Address.isCaller(owner)) {\n      throw new Error('Sender was not the owner.');\n    }\n    this.owner = owner;\n    this.issue(owner, amount);\n  }\n}\n```\n\n`Redtoken.ts`\n\n`RedToken` inherits methods and properties that adheres to the NEP5 token standard because of the mixin. It also inherits everything defined in `SimpleToken`.\n\n```typescript\nimport { Address, Deploy, Fixed } from '@neo-one/smart-contract';\nimport { SimpleToken } from './SimpleToken';\nexport class RedToken extends SimpleToken {\n  public readonly name: string = 'RedToken';\n  public readonly symbol: string = 'RT';\n  public constructor(owner: Address = Deploy.senderAddress, amount: Fixed<8> = 1_000_000_00000000) {\n    super(owner, amount);\n  }\n}\n```\n\n---\n\n## Available Templates\n\n- [NEP5Token](https://github.com/neo-one-suite/neo-one/blob/master-2.x/packages/neo-one-smart-contract-lib/src/NEP5Token.ts) - [NEP5 Token Standard](https://docs.neo.org/tutorial/en-us/9-smartContract/What_is_nep5.html)\n- [ICO](https://github.com/neo-one-suite/neo-one/blob/master-2.x/packages/neo-one-smart-contract-lib/src/ICO.ts) - Initial Coin Offering.\n- Ownership/[Ownable](https://github.com/neo-one-suite/neo-one/blob/master-2.x/packages/neo-one-smart-contract-lib/src/ownership/Ownable.ts) - This mixin provides a means to assign an address as the owner of a contract. Extending this class and adding `this.ownerOnly()`; to the beginning of all public functions will throw an error anytime an address other than the primary makes requests.\n- Ownership/[Secondary](https://github.com/neo-one-suite/neo-one/blob/master-2.x/packages/neo-one-smart-contract-lib/src/ownership/Secondary.ts) - This mixin provides a means to mark an address as the primary caller of this contract. Extending this class and adding `this.primaryOnly()`; to the beginning of all public functions will throw an error anytime an address other than the primary makes requests.\n"},"link":"packages/neo-one-website/docs/0-installation/5-contract-mixins.md","sidebar":[{"title":"Installation","numbered":false,"subsections":[{"title":"Quick Start","slug":"/docs/quick-start"},{"title":"Getting Started","slug":"/docs/getting-started"},{"title":"Environment Setup","slug":"/docs/environment-setup"},{"title":"CLI","slug":"/docs/cli"},{"title":"Playground","slug":"/docs/playground"},{"title":"Contract Mixins","slug":"/docs/contract-mixins"}]},{"title":"Main Concepts","numbered":true,"subsections":[{"title":"Hello World","slug":"/docs/hello-world"},{"title":"Blockchain Basics","slug":"/docs/blockchain-basics"},{"title":"Smart Contract Basics","slug":"/docs/smart-contract-basics"},{"title":"Standard Library","slug":"/docs/standard-library"},{"title":"Properties and Storage","slug":"/docs/properties-and-storage"},{"title":"Methods","slug":"/docs/methods"},{"title":"Events and Logs","slug":"/docs/events-and-logs"},{"title":"Calling Smart Contracts","slug":"/docs/calling-smart-contracts"},{"title":"Client APIs","slug":"/docs/client-apis"},{"title":"Smart Contract APIs","slug":"/docs/smart-contract-apis"},{"title":"Testing","slug":"/docs/testing"},{"title":"Decentralized Apps","slug":"/docs/dapps"},{"title":"NEP-5","slug":"/docs/nep-5"},{"title":"Deployment","slug":"/docs/deployment"}]},{"title":"Advanced Guides","numbered":false,"subsections":[{"title":"Native Assets","slug":"/docs/native-assets"},{"title":"Forward Values","slug":"/docs/forward-values"},{"title":"User Accounts","slug":"/docs/user-accounts"},{"title":"Extended Client APIs","slug":"/docs/extended-client-apis"},{"title":"Raw Client APIs","slug":"/docs/Raw-client-apis"},{"title":"React","slug":"/docs/react"},{"title":"Angular","slug":"/docs/angular"},{"title":"Vue","slug":"/docs/vue"},{"title":"dAPI Support","slug":"/docs/dapi-support"},{"title":"Configuration Options","slug":"/docs/config-options"}]},{"title":"Node","numbered":false,"subsections":[{"title":"Local Docker Development","slug":"/docs/node-docker"},{"title":"Kubernetes","slug":"/docs/node-kubernetes"},{"title":"Docker Compose","slug":"/docs/node-compose"},{"title":"Building From Source","slug":"/docs/node-source"},{"title":"Heroku Deployment","slug":"/docs/node-heroku"},{"title":"Configuration Reference","slug":"/docs/node-configuration"}]},{"title":"Contributing","numbered":false,"subsections":[{"title":"How to Contribute","slug":"/docs/how-to-contribute"},{"title":"Codebase Overview","slug":"/docs/codebase-overview"},{"title":"Smart Contract Compiler","slug":"/docs/smart-contract-compiler"},{"title":"Code of Conduct","slug":"/docs/code-of-conduct"}]}],"next":{"slug":"/docs/hello-world","title":"Hello World"},"previous":{"slug":"/docs/playground","title":"Playground"}},"path":"docs/contract-mixins"}
