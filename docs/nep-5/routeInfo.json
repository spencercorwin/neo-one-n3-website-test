{"template":"/Users/spencercorwin/neo-one/packages/neo-one-website/src/pages/docs","sharedHashesByProp":{},"data":{"current":"/docs/nep-5","title":"NEP-5","content":{"type":"markdown","value":"\nNEP-5 is a Neo Improvement Proposal that defines a token standard for Neo smart contracts.\n\n---\n\n[[toc]]\n\n---\n\n## Properties\n\nAccording to the NEP-5 standard a NEP-5 smart contract must have the following properties:\n\n- `decimals`\n- `symbol`\n- `name`\n\nThe standard actually calls them \"methods\", but for NEO•ONE smart contracts they will be public readonly properties which compile down to methods.\n\nLet's take a look at an example:\n\n```typescript\nexport class Token extends SmartContract {\n  public readonly name = 'Eon';\n  public readonly symbol = 'EON';\n  public readonly decimals = 8;\n}\n```\n\n## Methods\n\nAccording to the NEP-5 standard a NEP-5 smart contract must have the following methods:\n\n- `balanceOf`\n- `totalSupply`\n- `transfer`\n\nLet's take a look at an example:\n\n```typescript\nexport class Token extends SmartContract {\n  @constant\n  public get totalSupply(): Fixed<8> {\n    return this.mutableSupply;\n  }\n\n  @constant\n  public balanceOf(address: Address): Fixed<8> {\n    const balance = this.balances.get(address);\n\n    return balance === undefined ? 0 : balance;\n  }\n\n  public transfer(from: Address, to: Address, amount: Fixed<8>): boolean {\n    // Sanity check that amount.\n    if (amount < 0) {\n      throw new Error(`Amount must be greater than 0: ${amount}`);\n    }\n\n    // Verify that the `from` `Address` has approved this call.\n    if (!Address.isCaller(from)) {\n      throw new Error('from Address did not approve the transfer');\n    }\n\n    // Sanity check that the `from` `Address` has enough balance\n    const fromBalance = this.balanceOf(from);\n    if (fromBalance < amount) {\n      throw new Error('From balance is insufficient');\n    }\n\n    // Update balances accordingly\n    const toBalance = this.balanceOf(to);\n    this.balances.set(from, fromBalance - amount);\n    this.balances.set(to, toBalance + amount);\n\n    return true;\n  }\n}\n```\n\n## Events\n\nAccording to the NEP-5 standard a NEP-5 smart contract must emit the following events:\n\n- `transfer`\n\nLet's take a look at an example:\n\n```typescript\nexport class Token extends SmartContract {}\n```\n\nIf all these criteria are met then the NEO•ONE compiler will produce a manifest with `\"NEP-5\"` included in the `supportedStandards` array.\n"},"link":"packages/neo-one-website/docs/1-main-concepts/12-NEP-5.md","sidebar":[{"title":"Installation","numbered":false,"subsections":[{"title":"Quick Start","slug":"/docs/quick-start"},{"title":"Getting Started","slug":"/docs/getting-started"},{"title":"Environment Setup","slug":"/docs/environment-setup"},{"title":"CLI","slug":"/docs/cli"},{"title":"Playground","slug":"/docs/playground"},{"title":"Contract Mixins","slug":"/docs/contract-mixins"}]},{"title":"Main Concepts","numbered":true,"subsections":[{"title":"Hello World","slug":"/docs/hello-world"},{"title":"Blockchain Basics","slug":"/docs/blockchain-basics"},{"title":"Smart Contract Basics","slug":"/docs/smart-contract-basics"},{"title":"Standard Library","slug":"/docs/standard-library"},{"title":"Properties and Storage","slug":"/docs/properties-and-storage"},{"title":"Methods","slug":"/docs/methods"},{"title":"Events and Logs","slug":"/docs/events-and-logs"},{"title":"Calling Smart Contracts","slug":"/docs/calling-smart-contracts"},{"title":"Client APIs","slug":"/docs/client-apis"},{"title":"Smart Contract APIs","slug":"/docs/smart-contract-apis"},{"title":"Testing","slug":"/docs/testing"},{"title":"Decentralized Apps","slug":"/docs/dapps"},{"title":"NEP-5","slug":"/docs/nep-5"},{"title":"Deployment","slug":"/docs/deployment"}]},{"title":"Advanced Guides","numbered":false,"subsections":[{"title":"Native Assets","slug":"/docs/native-assets"},{"title":"Forward Values","slug":"/docs/forward-values"},{"title":"User Accounts","slug":"/docs/user-accounts"},{"title":"Extended Client APIs","slug":"/docs/extended-client-apis"},{"title":"Raw Client APIs","slug":"/docs/Raw-client-apis"},{"title":"React","slug":"/docs/react"},{"title":"Angular","slug":"/docs/angular"},{"title":"Vue","slug":"/docs/vue"},{"title":"dAPI Support","slug":"/docs/dapi-support"},{"title":"Configuration Options","slug":"/docs/config-options"}]},{"title":"Node","numbered":false,"subsections":[{"title":"Local Docker Development","slug":"/docs/node-docker"},{"title":"Kubernetes","slug":"/docs/node-kubernetes"},{"title":"Docker Compose","slug":"/docs/node-compose"},{"title":"Building From Source","slug":"/docs/node-source"},{"title":"Heroku Deployment","slug":"/docs/node-heroku"},{"title":"Configuration Reference","slug":"/docs/node-configuration"}]},{"title":"Contributing","numbered":false,"subsections":[{"title":"How to Contribute","slug":"/docs/how-to-contribute"},{"title":"Codebase Overview","slug":"/docs/codebase-overview"},{"title":"Smart Contract Compiler","slug":"/docs/smart-contract-compiler"},{"title":"Code of Conduct","slug":"/docs/code-of-conduct"}]}],"next":{"slug":"/docs/deployment","title":"Deployment"},"previous":{"slug":"/docs/dapps","title":"Decentralized Apps"}},"path":"docs/nep-5"}
